
name: Custom Workflow

on:
  workflow_call:
    inputs:
      branch_name:
        required: true

jobs:
  gather-anvil-repos:
    name: Gather AnVIL Repositories
    runs-on: ubuntu-latest
    container:
      image: jhudsl/course_template:main

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Configure git
        run: |
          echo hello
        shell: bash

      # - name: Configure git
      #   run: |
      #     git config --local user.email "itcrtrainingnetwork@gmail.com"
      #     git config --local user.name "jhudsl-robot"
      #     git fetch --all
      #     git checkout $branch_name
      #   shell: bash
      # 
      # - name: Merge if preview branch 
      #   if: ${{ inputs.branch_name != 'main' && inputs.branch_name != 'staging'}}
      #   run: |
      #     git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }} --allow-unrelated-histories
      #   shell: bash
      # 
      # - name: Run AnVIL repo check
      #   id: anvil_repos
      #   env:
      #     GH_PAT: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     sudo apt-get install libcurl4-openssl-dev
      # 
      #     # Run repo check script
      #     Rscript --vanilla "scripts/anvil_repo_check.R" --git_pat "$GH_PAT"
      # 
      # - name: Archive AnVIL repos
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: anvil-repo-results
      #     path: resources/AnVIL_repos.tsv
      # 
      # - name: Commit AnVIL Repos file
      #   run: |
      #     git add --force resources/AnVIL_repos.tsv || echo "No changes to commit"
      #     git commit -m 'Add AnVIL repos file' || echo "No changes to commit"
      #     git fetch
      #     
      # - name: Merge if preview branch 
      #   if: ${{ inputs.branch_name != 'main' && inputs.branch_name != 'staging'}}
      #   run: |
      #     git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }} --allow-unrelated-histories
      #   shell: bash
      #   
      # - name: Push changes
      #   run: |
      #     git push --force origin $branch_name || echo "No changes to commit"
      #   shell: bash
